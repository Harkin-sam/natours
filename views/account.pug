extend base 


mixin navItem(link, text, icon, active)
    li(class = `${active ? 'side-nav--active' :  '' }`)
        a(href=`${link}`)
            svg
            use(xlink:href=`img/icons.svg#icon-${icon}`)
            | #{text}



block content

    main.main
        .user-view
            nav.user-view__menu
                ul.side-nav
                    +navItem('#', 'Settings', 'settings', true)
                    +navItem('/my-tours', 'My bookings', 'briefcase')
                    +navItem('#', 'My reviews', 'star')
                    +navItem('#', 'Billing', 'credit-card')

                //-  this will only be visible if the current user is an administrator

                - if(user.role === 'admin')
                    .admin-nav
                        h5.admin-nav__heading Admin
                        ul.side-nav
                            +navItem('#', 'Manage tours', 'map')
                            +navItem('#', 'Manage users', 'users')
                            +navItem('#', 'Manage reviews', 'star')
                            +navItem('#', 'Manage bookings', 'briefcase')

            .user-view__content
                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Your account settings
                    //- action()  in forms automatically sends the form data as a post request the specified endpoint, it url encoded, the field value will be send with the request based on their 'name' attRibute
                    
                    //- SENDING FORM DATA WITHOUT API- directly to the server
                    //- form.form.form-user-data(action='/submit-user-data' method='POST' enctype='multipart/form-data')

                    //- WITH API CALL
                    form.form.form-user-data
                        .form__group
                            label.form__label(for='name') Name
                            input#name.form__input(type='text', value=`${user.name}`, required, name='name')
                        .form__group.ma-bt-md
                            label.form__label(for='email') Email address
                            input#email.form__input(type='email', value=`${user.email}`, required, name='email')
                        .form__group.form__photo-upload
                            img.form__user-photo(src=`img/users/${user.photo}`, alt=`${user.name}`)

                            input.form__upload(type='file', accept='image/*' id='photo' , name='photo')

                            //- the name = photo becos that the name we have in our User document & thats also the name MULTER middleware is expecting

                            label(for='photo') Choose new photo
                            //- label for = same name as id cos in html it is the label we click that will then activate the input element 
                        .form__group.right
                            button#userDataSubmit.btn.btn--small.btn--green Save settings
                .line &nbsp;
                .user-view__form-container
                    h2.heading-secondary.ma-bt-md Password change
                    form.form.form-user-settings
                        .form__group
                            label.form__label(for='password-current') Current password
                            input#password-current.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group
                            label.form__label(for='password') New password
                            input#password.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group.ma-bt-lg
                            label.form__label(for='password-confirm') Confirm password
                            input#password-confirm.form__input(type='password', placeholder='••••••••', required, minlength='8')
                        .form__group.right
                            button#userPasswordSubmit.btn.btn--small.btn--green Save password

    